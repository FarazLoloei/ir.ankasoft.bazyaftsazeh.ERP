@model ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Models.Organization.ViewModelCreateOrganization

<div class="content-heading">@Resource.Organization</div>

<div class="row">
    <div class="col-lg-9">
        @using (Html.BeginForm(MVC.Organization.Create(), FormMethod.Post, new { @class = "panel" }))
        {

            @Html.AntiForgeryToken()
            <div role="tabpanel">
                <ul class="nav nav-tabs nav-justified">
                    <li role="presentation" class="active">
                        <a href="#edit" aria-controls="edit" role="tab" data-toggle="tab">@Resource.Information @Resource.Organization</a>
                    </li>
                    <li role="presentation">
                        <a href="#communication" aria-controls="communication" role="tab" data-toggle="tab">@Resource.Information @Resource.Communication</a>
                    </li>
                    <li role="presentation">
                        <a href="#postal" aria-controls="postal" role="tab" data-toggle="tab">@Resource.Information @Resource.PostalAddress</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div id="edit" role="tabpanel" class="tab-pane active">
                        @Html.HiddenFor(model => model.parentId)
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>

                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RegistrationPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.RegistrationPlace, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </fieldset>

                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CommercialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CommercialNumber, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div id="communication" role="tabpanel" class="tab-pane ">
                        <div class="form-group">
                            <div class="text-right">
                                <button type="button" class="btn btn-labeled btn-success buttonAddCommunication">
                                    <span class="btn btn-label">
                                        <i class="fa fa-plus"></i>
                                    </span>@Resource.Add
                                </button>

                                <button type="button" class="btn btn-labeled btn-danger buttonRemoveCommunication">
                                    <span class="btn btn-label">
                                        <i class="fa fa-minus"></i>
                                    </span>@Resource.Remove
                                </button>
                            </div>
                        </div>
                        <div class="communications">
                            <table class="table anka_dataTable table-striped table-bordered"></table>
                        </div>
                    </div>
                    <div id="postal" role="tabpanel" class="tab-pane">
                        <div class="form-group">
                            <div class="text-right">
                                <button type="button" class="btn btn-labeled btn-success buttonAddPostalAddress">
                                    <span class="btn btn-label">
                                        <i class="fa fa-plus"></i>
                                    </span>@Resource.Add
                                </button>

                                <button type="button" class="btn btn-labeled btn-danger buttonRemovePostalAddress">
                                    <span class="btn btn-label">
                                        <i class="fa fa-minus"></i>
                                    </span>@Resource.Remove
                                </button>
                            </div>
                        </div>
                        <div class="postalAddresses">
                            <table class="table anka_dataTable table-striped table-bordered"></table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="text-right mt-lg">
                <button class="btn btn-primary" type="submit">@Resource.Create</button>
                @Html.ActionLink(Resource.Cancel, null, null, null, new { href = Request.UrlReferrer, @class = "btn btn-warning" })
            </div>
        }
    </div>
</div>

@section scripts{
    @Scripts.Render(Bundles.Scripts.sweetAlert)
    <script type="text/javascript">
        $(document).ready(function () {
            /*Communication*/
            $('.buttonAddCommunication').click(function () {
                var communication = $('#communication .communications');
                var myUrl = '@Url.JavaScriptReplaceableUrl(MVC.Communication.CommunicationDetail())';
                var Url = '@Url.Action(MVC.Communication.CommunicationDetail())';
                var serializedValues = communication.find('input, select').serializeArray();
                if (communication.find('input').length < 1)
                    Url = myUrl;
                $.ajax({
                    url: Url,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html',
                    data: serializedValues,
                    success: function (result) {
                        communication.find('table').html(result);
                        recreateSelect2(communication);
                    },
                    error: function (xhr, status) {
                        swal("@Resource.Cancelled ", status, "error");
                    }
                })
            });

            $('.buttonRemoveCommunication').click(function () {
                var communication = $('#communication .communications');
                communication.find('tbody tr').last().remove();
            });
            /*PostalAddress*/
            $('.buttonAddPostalAddress').click(function () {
                var postal = $('#postal .postalAddresses');
                var myUrl = '@Url.JavaScriptReplaceableUrl(MVC.PostalAddress.PostalAddressDetail())';
                var Url = '@Url.Action(MVC.PostalAddress.PostalAddressDetail())';
                var serializedValues = postal.find('input, select').serializeArray();
                if (postal.find('input').length < 1)
                    Url = myUrl;
                $.ajax({
                    url: Url,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html',
                    data: serializedValues,
                    success: function (result) {
                        postal.find('table').html(result);
                        recreateSelect2(postal);
                    },
                    error: function (xhr, status) {
                        swal("@Resource.Cancelled ", status, "error");
                    }
                })
            });

            $('.buttonRemovePostalAddress').click(function () {
                var communication = $('#postal .postalAddresses');
                communication.find('tbody tr').last().remove();
            });

            function recreateSelect2(selector) {
                selector.find('select').select2({ dir: "rtl" }); //.css('width', '100%')
            }
        });
    </script>
}