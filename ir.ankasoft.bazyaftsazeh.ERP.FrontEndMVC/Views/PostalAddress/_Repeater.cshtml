@using ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Models.Party;
@using ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Models.PostalAddress;
@*@model ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Models.Party.ViewModelCreateParty*@
@*@model dynamic*@
@*PostalAddress*@
@*@{
        dynamic newModel;
        if (Model is ViewModelCreateParty)
        { newModel = (ViewModelCreateParty)Model; }
        else
        { newModel = (ViewModelModifyParty)Model; }

        ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Models.PostalAddress.ViewModelPostalAddress schema = Model.PostalAddressCollection.FirstOrDefault();
    }
    @{
        if (Model.PostalAddressCollection.Any())
        {
            <thead>
                <tr>
                    <td class="hidden"></td>
                    <td class="col-md-1">@Html.LabelFor(model => schema.Type)</td>
                    <td class="col-md-1">@Html.LabelFor(model => schema.IsPrimary)</td>
                    <td class="col-md-4">@Html.LabelFor(model => schema.ProvinceCity)</td>
                    <td class="col-md-4">@Html.LabelFor(model => schema.Value)</td>
                    <td class="col-md-2">@Html.LabelFor(model => schema.PostalCode)</td>
                </tr>
            </thead>
            <tbody>
                @{
                    @if (newModel is ViewModelCreateParty)
                    {
                        var innerModel = (ViewModelCreateParty)newModel;
                        foreach (var item in innerModel.PostalAddressCollection.Select((value, i) => new { i, value }))
                        {
                            <tr>
                                <td class="hidden">@Html.HiddenFor(model => innerModel.PostalAddressCollection[item.i].recId)</td>
                                <td class="col-md-1">@Html.EnumDropDownListFor(model => innerModel.PostalAddressCollection[item.i].Type, new { @class = "select2" })</td>
                                <td class="col-md-1">@Html.EditorFor(model => innerModel.PostalAddressCollection[item.i].IsPrimary, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td class="col-md-3">@Html.DropDownListFor(model => innerModel.PostalAddressCollection[item.i].ProvinceCity, innerModel.PostalAddressCollection[item.i].ProvinceCityList, new { @class = "form-control select2" })</td>
                                <td class="col-md-3">@Html.EditorFor(model => innerModel.PostalAddressCollection[item.i].Value, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td class="col-md-2">@Html.EditorFor(model => innerModel.PostalAddressCollection[item.i].PostalCode, new { htmlAttributes = new { @class = "form-control text-right" } })</td>
                            </tr>
                        }
                    }
                    else
                    {
                        var innerModel = (ViewModelModifyParty)newModel;
                        foreach (var item in innerModel.PostalAddressCollection.Select((value, i) => new { i, value }))
                        {
                            <tr>
                                <td class="hidden">@Html.HiddenFor(model => innerModel.PostalAddressCollection[item.i].recId)</td>
                                <td class="col-md-1">@Html.EnumDropDownListFor(model => innerModel.PostalAddressCollection[item.i].Type, new { @class = "select2" })</td>
                                <td class="col-md-1">@Html.EditorFor(model => innerModel.PostalAddressCollection[item.i].IsPrimary, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td class="col-md-3">@Html.DropDownListFor(model => innerModel.PostalAddressCollection[item.i].ProvinceCity, innerModel.PostalAddressCollection[item.i].ProvinceCityList, new { @class = "form-control select2" })</td>
                                <td class="col-md-3">@Html.EditorFor(model => innerModel.PostalAddressCollection[item.i].Value, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td class="col-md-2">@Html.EditorFor(model => innerModel.PostalAddressCollection[item.i].PostalCode, new { htmlAttributes = new { @class = "form-control text-right" } })</td>
                            </tr>
                        }
                    }
                }
            </tbody>
                    }
    }*@

@model List<ViewModelPostalAddress>
@*PostalAddress*@
@{

    ViewModelPostalAddress schema = Model.FirstOrDefault();
}
@{
    if (Model.Any())
    {
        <thead>
            <tr>
                <td class="hidden"></td>
                <td class="col-md-1">@Html.LabelFor(model => schema.Postal_Type)</td>
                <td class="col-md-1">@Html.LabelFor(model => schema.Postal_IsPrimary)</td>
                <td class="col-md-4">@Html.LabelFor(model => schema.ProvinceCity)</td>
                <td class="col-md-4">@Html.LabelFor(model => schema.Postal_Value)</td>
                <td class="col-md-2">@Html.LabelFor(model => schema.PostalCode)</td>
            </tr>
        </thead>
            <tbody>
                @foreach (var item in Model.Select((value, i) => new { i, value }))
                {
                    if (Model[item.i].ProvinceCityList != null)
                    {
                        <tr>
                            <td class="hidden">
                                @Html.HiddenFor(model => Model[item.i].Postal_recId)
                            </td>
                            <td class="col-md-1">@Html.EnumDropDownListFor(model => Model[item.i].Postal_Type, new { @class = "select2" })</td>
                            <td class="col-md-1">@Html.EditorFor(model => Model[item.i].Postal_IsPrimary, new { htmlAttributes = new { @class = "form-control" } })</td>
                            <td class="col-md-4">@Html.DropDownListFor(model => Model[item.i].ProvinceCity, Model[item.i].ProvinceCityList, new { @class = "form-control select2" })</td>
                            <td class="col-md-4">@Html.EditorFor(model => Model[item.i].Postal_Value, new { htmlAttributes = new { @class = "form-control" } })</td>
                            <td class="col-md-2">@Html.EditorFor(model => Model[item.i].PostalCode, new { htmlAttributes = new { @class = "form-control text-right" } })</td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td class="hidden">
                                @Html.HiddenFor(model => Model[item.i].Postal_recId)
                                @Html.HiddenFor(model => Model[item.i].Postal_Type)
                                @Html.HiddenFor(model => Model[item.i].Postal_IsPrimary)
                                @Html.HiddenFor(model => Model[item.i].ProvinceCity)
                                @Html.HiddenFor(model => Model[item.i].Postal_Value)
                                @Html.HiddenFor(model => Model[item.i].PostalCode)
                                @Html.HiddenFor(model => Model[item.i].ProvinceRefRecId)
                                @Html.HiddenFor(model => Model[item.i].CityRefRecId)
                        </td>
                        <td class="col-md-1">@Html.AnkaResource(model => Model[item.i].Postal_Type)</td>
                        <td class="col-md-1">@Html.DisplayFor(model => Model[item.i].Postal_IsPrimary, new { htmlAttributes = new { @class = "form-control-static" } })</td>
                        <td class="col-md-4">@Html.DisplayFor(model => Model[item.i].Province, new { @class = "form-control-static" }) - @Html.DisplayFor(model => Model[item.i].City, new { @class = "form-control-static" })</td>
                        <td class="col-md-4">@Html.DisplayFor(model => Model[item.i].Postal_Value, new { htmlAttributes = new { @class = "form-control-static" } })</td>
                        <td class="col-md-2">@Html.DisplayFor(model => Model[item.i].PostalCode, new { htmlAttributes = new { @class = "form-control-static text-right" } })</td>
                    </tr>
                    }

                }
            </tbody>
    }
}