@model ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Models.Document.ViewModelCreateDocument

<div class="content-heading">@Resource.Document</div>

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm(MVC.Document.Create(), FormMethod.Post, new { @class = "panel" }))
        {
            @Html.AntiForgeryToken()
            <div role="tabpanel">
                <ul class="nav nav-tabs nav-justified">
                    <li role="presentation" class="active">
                        <a href="#edit" aria-controls="edit" role="tab" data-toggle="tab">@Resource.Information @Resource.Person</a>
                    </li>
                    <li role="presentation">
                        <a href="#cost" aria-controls="cost" role="tab" data-toggle="tab">@Resource.Cost</a>
                    </li>
                    <li role="presentation">
                        <a href="#imperfection" aria-controls="imperfection" role="tab" data-toggle="tab">@Resource.Imperfection</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div id="edit" role="tabpanel" class="tab-pane active">
                        <div class="row">
                            <div class="col-md-6">
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LastOwnerRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.LastOwnerRecId, Model.LastOwner,
                                        new { @class = "select2 form-control" })
                                            @Html.ValidationMessageFor(model => model.LastOwnerRecId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PlateOwnerRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.PlateOwnerRecId, Model.PlateOwner,
                                        new { @class = "select2 form-control" })
                                            @Html.ValidationMessageFor(model => model.PlateOwnerRecId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.InvestorRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.InvestorRecId, Model.Investor,
                                        new { @class = "select2 form-control" })
                                            @Html.ValidationMessageFor(model => model.InvestorRecId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ContractorRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.ContractorRecId, Model.Contractor,
                                        new { @class = "select2 form-control" })
                                            @Html.ValidationMessageFor(model => model.ContractorRecId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EnumDropDownListFor(model => model.PaymentType, new { @class = "form-control select2" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PaymentDateShamsi, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.PaymentDateShamsi, new { @class = "form-control PaymentDateDataPicker" })

                                            @Html.ValidationMessageFor(model => model.PaymentDateShamsi, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PlanType, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EnumDropDownListFor(model => model.PlanType, new { @class = "form-control select2" })
                                        </div>
                                    </div>
                                </fieldset>

                                <div id="ReplacementSection" class="panel panel-default">
                                    <div class="panel-heading panel-heading-collapsed">
                                        @Resource.Replacements
                                    </div>
                                    <div class="panel-wrapper collapse">
                                        <div class="panel-body row">
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ReplacementPlan.BeneficiaryImporterRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.ReplacementPlan.BeneficiaryImporterRecId, Model.ReplacementPlan.BeneficiaryImporter,
                                        new { @class = "select2 form-control" })
                                                        @Html.ValidationMessageFor(model => model.ContractorRecId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ReplacementPlan.RepresentorRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.ReplacementPlan.RepresentorRecId, Model.ReplacementPlan.Representor,
                                        new { @class = "select2 form-control" })
                                                        @Html.ValidationMessageFor(model => model.ReplacementPlan.RepresentorRecId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ReplacementPlan.ReplacementVehicleRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.ReplacementPlan.ReplacementVehicleRecId, Model.Vehicle.VehicleTip,
                                        new { @class = "select2 form-control" })
                                                        @Html.ValidationMessageFor(model => model.ReplacementPlan.ReplacementVehicleRecId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                                <div id="GovernmentSection" class="panel panel-default">
                                    <div class="panel-heading panel-heading-collapsed">
                                        @Resource.Government
                                    </div>
                                    <div class="panel-wrapper collapse">
                                        <div class="panel-body row">
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.GovernmentPlan.OrganizationRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.GovernmentPlan.OrganizationRecId, Model.GovernmentPlan.Organization, new { @class = "select2 form-control" })
                                                        @Html.ValidationMessageFor(model => model.GovernmentPlan.OrganizationRecId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.GovernmentPlan.PermissionNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(model => model.GovernmentPlan.PermissionNumber, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.GovernmentPlan.PermissionNumber, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.GovernmentPlan.RepresentorRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.GovernmentPlan.RepresentorRecId, Model.GovernmentPlan.Representor,
                                        new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.GovernmentPlan.RepresentorRecId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Vehicle.VehicleTipRecId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.Vehicle.VehicleTipRecId, Model.Vehicle.VehicleTip,
                                        new { @class = "select2 form-control" })
                                            @Html.ValidationMessageFor(model => model.Vehicle.VehicleTipRecId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Vehicle.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Vehicle.Model, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Vehicle.Model, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Vehicle.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Vehicle.Color, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Vehicle.Color, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Vehicle.ChassisNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Vehicle.ChassisNumber, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Vehicle.ChassisNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Vehicle.EngineNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Vehicle.EngineNumber, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Vehicle.EngineNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Vehicle.CylinderCount, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EnumDropDownListFor(model => model.Vehicle.CylinderCount,
                                        new { @class = "select2 form-control" })
                                            @Html.ValidationMessageFor(model => model.Vehicle.CylinderCount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        @Resource.VehiclePlate @Resource.Information
                                        <a href="#" data-tool="panel-collapse" data-toggle="tooltip" title="@Resource.Collapse" class="pull-right">
                                            <em class="fa fa-minus"></em>
                                        </a>
                                    </div>
                                    <div class="panel-wrapper collapse in">
                                        <div class="panel-body row">
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Vehicle.Plate.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EnumDropDownListFor(model => model.Vehicle.Plate.Color, new { @class = "select2 form-control" })
                                                        @Html.ValidationMessageFor(model => model.Vehicle.Plate.Color, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Vehicle.Plate.Series, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EnumDropDownListFor(model => model.Vehicle.Plate.Series, new { @class = "select2 form-control" })
                                                        @Html.ValidationMessageFor(model => model.Vehicle.Plate.Series, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Vehicle.Plate.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(model => model.Vehicle.Plate.Number, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Vehicle.Plate.Number, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Vehicle.Plate.Shape, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EnumDropDownListFor(model => model.Vehicle.Plate.Shape, new { @class = "select2 form-control" })
                                                        @Html.ValidationMessageFor(model => model.Vehicle.Plate.Shape, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="cost" role="tabpanel" class="tab-pane ">
                        <div class="form-group">
                            <div class="text-right">
                                <button type="button" class="btn btn-labeled btn-success buttonAddCost">
                                    <span class="btn btn-label">
                                        <i class="fa fa-plus"></i>
                                    </span>@Resource.Add
                                </button>

                                <button type="button" class="btn btn-labeled btn-danger buttonRemoveCost">
                                    <span class="btn btn-label">
                                        <i class="fa fa-minus"></i>
                                    </span>@Resource.Remove
                                </button>
                            </div>
                        </div>
                        <div class="costs">
                            <table class="table anka_dataTable table-striped table-bordered"></table>
                        </div>
                    </div>
                    <div id="imperfection" role="tabpanel" class="tab-pane">
                        <div class="form-group">
                            <div class="text-right">
                                <button type="button" class="btn btn-labeled btn-success buttonAddImperfection">
                                    <span class="btn btn-label">
                                        <i class="fa fa-plus"></i>
                                    </span>@Resource.Add
                                </button>

                                <button type="button" class="btn btn-labeled btn-danger buttonRemoveImperfection">
                                    <span class="btn btn-label">
                                        <i class="fa fa-minus"></i>
                                    </span>@Resource.Remove
                                </button>
                            </div>
                        </div>
                        <div class="imperfections">
                            <table class="table anka_dataTable table-striped table-bordered"></table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="text-right mt-lg">
                <button class="btn btn-primary" type="submit">@Resource.Create</button>
                @Html.ActionLink(Resource.Cancel, null, null, null, new { href = Request.UrlReferrer, @class = "btn btn-warning" })
            </div>
        }
    </div>
</div>
@section styles{
    @Styles.Render(Bundles.Styles.bootstrapPersianDatePickerCss)
}
@section scripts{
    @Scripts.Render(Bundles.Scripts.sweetAlert)
    @Scripts.Render(Bundles.Scripts.bootstrapPersianDatePicker)
    <script type="text/javascript">
        $(document).ready(function () {
            $(document.body).on("change", ".selector", function (e) {
                $(e.target).parent().parent().find('.value').val(this.value.split(',')[1]);
            });
            $('.PaymentDateDataPicker').MdPersianDateTimePicker({
                Placement: 'right', // default is 'bottom'
                //Trigger: 'focus', // default is 'focus',
                //EnableTimePicker: true, // default is true,
                TargetSelector: '.PaymentDateDataPicker', // default is empty,
                //GroupId: '', // default is empty,
                //ToDate: false, // default is false,
                // FromDate: false, // default is false,
                DisableBeforeToday: true,
                EnglishNumber: true,
            });

            $('#PlanType').on("change", function (e) {
                switch (this.value) {

                    case '2': //Replacement
                        var governmentSection = $('div#GovernmentSection');
                        if (!governmentSection.find('div.panel-heading').hasClass('panel-heading-collapsed'))
                        {
                            governmentSection.find('div.panel-heading').addClass('panel-heading-collapsed');
                            governmentSection.find('div.panel-wrapper').addClass('collapse');
                        }

                        var replacementSection = $('div#ReplacementSection');
                        replacementSection.find('div.panel-heading').removeClass('panel-heading-collapsed');
                        replacementSection.find('div.panel-wrapper').removeClass('collapse');

                        break;
                    case '3':// Government
                        var replacementSection = $('div#ReplacementSection');
                        if (!replacementSection.find('div.panel-heading').hasClass('panel-heading-collapsed')) {
                            replacementSection.find('div.panel-heading').addClass('panel-heading-collapsed');
                            replacementSection.find('div.panel-wrapper').addClass('collapse');
                        }

                        var governmentSection = $('div#GovernmentSection');
                        governmentSection.find('div.panel-heading').removeClass('panel-heading-collapsed');
                        governmentSection.find('div.panel-wrapper').removeClass('collapse');
                        break;
                    default:
                        var replacementSection = $('div#ReplacementSection');
                        if (!replacementSection.find('div.panel-heading').hasClass('panel-heading-collapsed')) {
                            replacementSection.find('div.panel-heading').addClass('panel-heading-collapsed');
                            replacementSection.find('div.panel-wrapper').addClass('collapse');
                        }
                        var governmentSection = $('div#GovernmentSection');
                        if (!governmentSection.find('div.panel-heading').hasClass('panel-heading-collapsed')) {
                            governmentSection.find('div.panel-heading').addClass('panel-heading-collapsed');
                            governmentSection.find('div.panel-wrapper').addClass('collapse');
                        }
                        break;
                }
            });

            /*Cost*/
            $('.buttonAddCost').click(function () {
                var communication = $('#cost .costs');
                var myUrl = '@Url.JavaScriptReplaceableUrl(MVC.DocumentCost.CostDetail())';
                var Url = '@Url.Action(MVC.DocumentCost.CostDetail())';
                var serializedValues = communication.find('input, select').serializeArray();
                if (communication.find('input').length < 1)
                    Url = myUrl;
                $.ajax({
                    url: Url,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html',
                    data: serializedValues,
                    success: function (result) {
                        communication.find('table').html(result);
                        recreateSelect2(communication);
                    },
                    error: function (xhr, status) {
                        swal("@Resource.Cancelled ", status, "error");
                    }
                })
            });

            $('.buttonRemoveCost').click(function () {
                var communication = $('#cost .costs');
                communication.find('tbody tr').last().remove();
            });
            /*Imprefection*/
            $('.buttonAddImperfection').click(function () {
                var postal = $('#imperfection .imperfections');
                var myUrl = '@Url.JavaScriptReplaceableUrl(MVC.DocumentImperfection.ImperfectionDetail())';
                var Url = '@Url.Action(MVC.DocumentImperfection.ImperfectionDetail())';
                var serializedValues = postal.find('input, select').serializeArray();
                if (postal.find('input').length < 1)
                    Url = myUrl;
                $.ajax({
                    url: Url,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html',
                    data: serializedValues,
                    success: function (result) {
                        postal.find('table').html(result);
                        recreateSelect2(postal);
                    },
                    error: function (xhr, status) {
                        swal("@Resource.Cancelled ", status, "error");
                    }
                })
            });

            $('.buttonRemoveimperfection').click(function () {
                var communication = $('#imperfection .imperfections');
                communication.find('tbody tr').last().remove();
            });

            function recreateSelect2(selector) {
                selector.find('select').select2({ dir: "rtl" }); //.css('width', '100%')
            }
        });
    </script>
}