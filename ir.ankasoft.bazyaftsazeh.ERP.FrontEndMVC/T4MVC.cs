// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.AccountController Account = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_AccountController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.BaseController Base = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_BaseController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.CommunicationController Communication = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_CommunicationController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.DashboardController Dashboard = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_DashboardController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.ImporterController Importer = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_ImporterController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.ManageController Manage = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_ManageController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.OrganizationController Organization = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_OrganizationController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.PagesController Pages = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_PagesController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.PartyController Party = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_PartyController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.PersonController Person = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_PersonController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.PostalAddressController PostalAddress = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_PostalAddressController();
    public static ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.RolesAdminController RolesAdmin = new ir.ankasoft.bazyaftsazeh.ERP.FrontEndMVC.Controllers.T4MVC_RolesAdminController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class app {
            public const string UrlPath = "~/Scripts/app";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string app_init_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/app.init.min.js") ? Url("app.init.min.js") : Url("app.init.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class modules {
                public const string UrlPath = "~/Scripts/app/modules";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string bootstrap_start_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-start.min.js") ? Url("bootstrap-start.min.js") : Url("bootstrap-start.js");
                public static readonly string constants_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/constants.min.js") ? Url("constants.min.js") : Url("constants.js");
                public static readonly string fullscreen_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fullscreen.min.js") ? Url("fullscreen.min.js") : Url("fullscreen.js");
                public static readonly string localize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/localize.min.js") ? Url("localize.min.js") : Url("localize.js");
                public static readonly string navbar_search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/navbar-search.min.js") ? Url("navbar-search.min.js") : Url("navbar-search.js");
                public static readonly string notify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/notify.min.js") ? Url("notify.min.js") : Url("notify.js");
                public static readonly string panel_tools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/panel-tools.min.js") ? Url("panel-tools.min.js") : Url("panel-tools.js");
                public static readonly string play_animation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/play-animation.min.js") ? Url("play-animation.min.js") : Url("play-animation.js");
                public static readonly string select2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2.min.js") ? Url("select2.min.js") : Url("select2.js");
                public static readonly string sidebar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sidebar.min.js") ? Url("sidebar.min.js") : Url("sidebar.js");
                public static readonly string slimscroll_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/slimscroll.min.js") ? Url("slimscroll.min.js") : Url("slimscroll.js");
                public static readonly string toggle_state_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/toggle-state.min.js") ? Url("toggle-state.min.js") : Url("toggle-state.js");
                public static readonly string utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/utils.min.js") ? Url("utils.min.js") : Url("utils.js");
            }
        
        }
    
        public static readonly string bootstrap_datetimepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datetimepicker.min.js") ? Url("bootstrap-datetimepicker.min.js") : Url("bootstrap-datetimepicker.js");
        public static readonly string bootstrap_datetimepicker_min_js = Url("bootstrap-datetimepicker.min.js");
        public static readonly string bootstrap_rtl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-rtl.min.js") ? Url("bootstrap-rtl.min.js") : Url("bootstrap-rtl.js");
        public static readonly string bootstrap_rtl_min_js = Url("bootstrap-rtl.min.js");
        public static readonly string bootstrap_tagsinput_angular_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-tagsinput-angular.min.js") ? Url("bootstrap-tagsinput-angular.min.js") : Url("bootstrap-tagsinput-angular.js");
        public static readonly string bootstrap_tagsinput_angular_min_js = Url("bootstrap-tagsinput-angular.min.js");
        public static readonly string bootstrap_tagsinput_angular_min_js_map = Url("bootstrap-tagsinput-angular.min.js.map");
        public static readonly string bootstrap_tagsinput_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-tagsinput.min.js") ? Url("bootstrap-tagsinput.min.js") : Url("bootstrap-tagsinput.js");
        public static readonly string bootstrap_tagsinput_min_js = Url("bootstrap-tagsinput.min.js");
        public static readonly string bootstrap_tagsinput_min_js_map = Url("bootstrap-tagsinput.min.js.map");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class i18n {
            public const string UrlPath = "~/Scripts/i18n";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
            public static readonly string az_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/az.min.js") ? Url("az.min.js") : Url("az.js");
            public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
            public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
            public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
            public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/da.min.js") ? Url("da.min.js") : Url("da.js");
            public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/de.min.js") ? Url("de.min.js") : Url("de.js");
            public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/el.min.js") ? Url("el.min.js") : Url("el.js");
            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en.min.js") ? Url("en.min.js") : Url("en.js");
            public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/es.min.js") ? Url("es.min.js") : Url("es.js");
            public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/et.min.js") ? Url("et.min.js") : Url("et.js");
            public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
            public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
            public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
            public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
            public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
            public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/he.min.js") ? Url("he.min.js") : Url("he.js");
            public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
            public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
            public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
            public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/id.min.js") ? Url("id.min.js") : Url("id.js");
            public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/is.min.js") ? Url("is.min.js") : Url("is.js");
            public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/it.min.js") ? Url("it.min.js") : Url("it.js");
            public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
            public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/km.min.js") ? Url("km.min.js") : Url("km.js");
            public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
            public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
            public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
            public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
            public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
            public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
            public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
            public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
            public static readonly string pt_BR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt-BR.min.js") ? Url("pt-BR.min.js") : Url("pt-BR.js");
            public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
            public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
            public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
            public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
            public static readonly string sr_Cyrl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sr-Cyrl.min.js") ? Url("sr-Cyrl.min.js") : Url("sr-Cyrl.js");
            public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
            public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
            public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/th.min.js") ? Url("th.min.js") : Url("th.js");
            public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
            public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
            public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
            public static readonly string zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh-CN.min.js") ? Url("zh-CN.min.js") : Url("zh-CN.js");
            public static readonly string zh_TW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh-TW.min.js") ? Url("zh-TW.min.js") : Url("zh-TW.js");
        }
    
        public static readonly string jquery_2_2_4_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-2.2.4.intellisense.min.js") ? Url("jquery-2.2.4.intellisense.min.js") : Url("jquery-2.2.4.intellisense.js");
        public static readonly string jquery_2_2_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-2.2.4.min.js") ? Url("jquery-2.2.4.min.js") : Url("jquery-2.2.4.js");
        public static readonly string jquery_2_2_4_min_js = Url("jquery-2.2.4.min.js");
        public static readonly string jquery_2_2_4_min_map = Url("jquery-2.2.4.min.map");
        public static readonly string jquery_contextMenu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.contextMenu.min.js") ? Url("jquery.contextMenu.min.js") : Url("jquery.contextMenu.js");
        public static readonly string jquery_contextMenu_min_js = Url("jquery.contextMenu.min.js");
        public static readonly string jquery_contextMenu_min_js_map = Url("jquery.contextMenu.min.js.map");
        public static readonly string jquery_ui_position_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.ui.position.min.js") ? Url("jquery.ui.position.min.js") : Url("jquery.ui.position.js");
        public static readonly string jquery_ui_position_min_js = Url("jquery.ui.position.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class MdBootstrapPersianDateTimePicker {
            public const string UrlPath = "~/Scripts/MdBootstrapPersianDateTimePicker";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jalaali_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jalaali.min.js") ? Url("jalaali.min.js") : Url("jalaali.js");
            public static readonly string jquery_Bootstrap_PersianDateTimePicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.Bootstrap-PersianDateTimePicker.min.js") ? Url("jquery.Bootstrap-PersianDateTimePicker.min.js") : Url("jquery.Bootstrap-PersianDateTimePicker.js");
        }
    
        public static readonly string moment_with_locales_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment-with-locales.min.js") ? Url("moment-with-locales.min.js") : Url("moment-with-locales.js");
        public static readonly string moment_with_locales_min_js = Url("moment-with-locales.min.js");
        public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
        public static readonly string moment_min_js = Url("moment.min.js");
        public static readonly string select2_full_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2.full.min.js") ? Url("select2.full.min.js") : Url("select2.full.js");
        public static readonly string select2_full_min_js = Url("select2.full.min.js");
        public static readonly string select2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2.min.js") ? Url("select2.min.js") : Url("select2.js");
        public static readonly string select2_min_js = Url("select2.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Vendor {
        public const string UrlPath = "~/Vendor";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class animate_css {
            public const string UrlPath = "~/Vendor/animate.css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string animate_min_css = Url("animate.min.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class animo_js {
            public const string UrlPath = "~/Vendor/animo.js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string animo_js_ = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/animo.min.js") ? Url("animo.min.js") : Url("animo.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Anka {
            public const string UrlPath = "~/Vendor/Anka";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string anka_tools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/anka.tools.min.js") ? Url("anka.tools.min.js") : Url("anka.tools.js");
            public static readonly string ankasoft_datatable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ankasoft.datatable.min.js") ? Url("ankasoft.datatable.min.js") : Url("ankasoft.datatable.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bbcnassim {
            public const string UrlPath = "~/Vendor/bbcnassim";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                public const string UrlPath = "~/Vendor/bbcnassim/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string font_BBCNassim_min_css = Url("font-BBCNassim.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                public const string UrlPath = "~/Vendor/bbcnassim/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string BBCNassim_eot = Url("BBCNassim.eot");
                public static readonly string BBCNassim_ttf = Url("BBCNassim.ttf");
                public static readonly string BBCNassim_woff = Url("BBCNassim.woff");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class contextMenu {
            public const string UrlPath = "~/Vendor/contextMenu";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_contextmenu_overlay_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.contextmenu-overlay.min.css") ? Url("jquery.contextmenu-overlay.min.css") : Url("jquery.contextmenu-overlay.css");
            public static readonly string jquery_contextmenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.contextmenu.min.css") ? Url("jquery.contextmenu.min.css") : Url("jquery.contextmenu.css");
            public static readonly string jquery_contextmenu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.contextmenu.min.js") ? Url("jquery.contextmenu.min.js") : Url("jquery.contextmenu.js");
            public static readonly string jquery_contextmenu_min_js = Url("jquery.contextmenu.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fontawesome {
            public const string UrlPath = "~/Vendor/fontawesome";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                public const string UrlPath = "~/Vendor/fontawesome/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                public const string UrlPath = "~/Vendor/fontawesome/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
                public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
                public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
                public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
                public static readonly string fontawesome_webfont_woff2 = Url("fontawesome-webfont.woff2");
                public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery_localize_i18n {
            public const string UrlPath = "~/Vendor/jquery-localize-i18n";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dist {
                public const string UrlPath = "~/Vendor/jquery-localize-i18n/dist";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string jquery_localize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.localize.min.js") ? Url("jquery.localize.min.js") : Url("jquery.localize.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jQuery_Storage_API {
            public const string UrlPath = "~/Vendor/jQuery-Storage-API";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_storageapi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.storageapi.min.js") ? Url("jquery.storageapi.min.js") : Url("jquery.storageapi.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery_easing {
            public const string UrlPath = "~/Vendor/jquery.easing";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                public const string UrlPath = "~/Vendor/jquery.easing/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string jquery_easing_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.easing.min.js") ? Url("jquery.easing.min.js") : Url("jquery.easing.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class matchMedia {
            public const string UrlPath = "~/Vendor/matchMedia";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string matchMedia_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/matchMedia.min.js") ? Url("matchMedia.min.js") : Url("matchMedia.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class roboto {
            public const string UrlPath = "~/Vendor/roboto";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                public const string UrlPath = "~/Vendor/roboto/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string font_Roboto_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/font-Roboto.min.css") ? Url("font-Roboto.min.css") : Url("font-Roboto.css");
                public static readonly string font_Roboto_min_css = Url("font-Roboto.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                public const string UrlPath = "~/Vendor/roboto/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string Roboto_Black_webfont_eot = Url("Roboto-Black-webfont.eot");
                public static readonly string Roboto_Black_webfont_svg = Url("Roboto-Black-webfont.svg");
                public static readonly string Roboto_Black_webfont_ttf = Url("Roboto-Black-webfont.ttf");
                public static readonly string Roboto_Black_webfont_woff = Url("Roboto-Black-webfont.woff");
                public static readonly string Roboto_BlackItalic_webfont_eot = Url("Roboto-BlackItalic-webfont.eot");
                public static readonly string Roboto_BlackItalic_webfont_svg = Url("Roboto-BlackItalic-webfont.svg");
                public static readonly string Roboto_BlackItalic_webfont_ttf = Url("Roboto-BlackItalic-webfont.ttf");
                public static readonly string Roboto_BlackItalic_webfont_woff = Url("Roboto-BlackItalic-webfont.woff");
                public static readonly string Roboto_Bold_webfont_eot = Url("Roboto-Bold-webfont.eot");
                public static readonly string Roboto_Bold_webfont_svg = Url("Roboto-Bold-webfont.svg");
                public static readonly string Roboto_Bold_webfont_ttf = Url("Roboto-Bold-webfont.ttf");
                public static readonly string Roboto_Bold_webfont_woff = Url("Roboto-Bold-webfont.woff");
                public static readonly string Roboto_BoldCondensed_webfont_eot = Url("Roboto-BoldCondensed-webfont.eot");
                public static readonly string Roboto_BoldCondensed_webfont_svg = Url("Roboto-BoldCondensed-webfont.svg");
                public static readonly string Roboto_BoldCondensed_webfont_ttf = Url("Roboto-BoldCondensed-webfont.ttf");
                public static readonly string Roboto_BoldCondensed_webfont_woff = Url("Roboto-BoldCondensed-webfont.woff");
                public static readonly string Roboto_BoldCondensedItalic_webfont_eot = Url("Roboto-BoldCondensedItalic-webfont.eot");
                public static readonly string Roboto_BoldCondensedItalic_webfont_svg = Url("Roboto-BoldCondensedItalic-webfont.svg");
                public static readonly string Roboto_BoldCondensedItalic_webfont_ttf = Url("Roboto-BoldCondensedItalic-webfont.ttf");
                public static readonly string Roboto_BoldCondensedItalic_webfont_woff = Url("Roboto-BoldCondensedItalic-webfont.woff");
                public static readonly string Roboto_BoldItalic_webfont_eot = Url("Roboto-BoldItalic-webfont.eot");
                public static readonly string Roboto_BoldItalic_webfont_svg = Url("Roboto-BoldItalic-webfont.svg");
                public static readonly string Roboto_BoldItalic_webfont_ttf = Url("Roboto-BoldItalic-webfont.ttf");
                public static readonly string Roboto_BoldItalic_webfont_woff = Url("Roboto-BoldItalic-webfont.woff");
                public static readonly string Roboto_Condensed_webfont_eot = Url("Roboto-Condensed-webfont.eot");
                public static readonly string Roboto_Condensed_webfont_svg = Url("Roboto-Condensed-webfont.svg");
                public static readonly string Roboto_Condensed_webfont_ttf = Url("Roboto-Condensed-webfont.ttf");
                public static readonly string Roboto_Condensed_webfont_woff = Url("Roboto-Condensed-webfont.woff");
                public static readonly string Roboto_CondensedItalic_webfont_eot = Url("Roboto-CondensedItalic-webfont.eot");
                public static readonly string Roboto_CondensedItalic_webfont_svg = Url("Roboto-CondensedItalic-webfont.svg");
                public static readonly string Roboto_CondensedItalic_webfont_ttf = Url("Roboto-CondensedItalic-webfont.ttf");
                public static readonly string Roboto_CondensedItalic_webfont_woff = Url("Roboto-CondensedItalic-webfont.woff");
                public static readonly string Roboto_Italic_webfont_eot = Url("Roboto-Italic-webfont.eot");
                public static readonly string Roboto_Italic_webfont_svg = Url("Roboto-Italic-webfont.svg");
                public static readonly string Roboto_Italic_webfont_ttf = Url("Roboto-Italic-webfont.ttf");
                public static readonly string Roboto_Italic_webfont_woff = Url("Roboto-Italic-webfont.woff");
                public static readonly string Roboto_Light_webfont_eot = Url("Roboto-Light-webfont.eot");
                public static readonly string Roboto_Light_webfont_svg = Url("Roboto-Light-webfont.svg");
                public static readonly string Roboto_Light_webfont_ttf = Url("Roboto-Light-webfont.ttf");
                public static readonly string Roboto_Light_webfont_woff = Url("Roboto-Light-webfont.woff");
                public static readonly string Roboto_LightItalic_webfont_eot = Url("Roboto-LightItalic-webfont.eot");
                public static readonly string Roboto_LightItalic_webfont_svg = Url("Roboto-LightItalic-webfont.svg");
                public static readonly string Roboto_LightItalic_webfont_ttf = Url("Roboto-LightItalic-webfont.ttf");
                public static readonly string Roboto_LightItalic_webfont_woff = Url("Roboto-LightItalic-webfont.woff");
                public static readonly string Roboto_Medium_webfont_eot = Url("Roboto-Medium-webfont.eot");
                public static readonly string Roboto_Medium_webfont_svg = Url("Roboto-Medium-webfont.svg");
                public static readonly string Roboto_Medium_webfont_ttf = Url("Roboto-Medium-webfont.ttf");
                public static readonly string Roboto_Medium_webfont_woff = Url("Roboto-Medium-webfont.woff");
                public static readonly string Roboto_MediumItalic_webfont_eot = Url("Roboto-MediumItalic-webfont.eot");
                public static readonly string Roboto_MediumItalic_webfont_svg = Url("Roboto-MediumItalic-webfont.svg");
                public static readonly string Roboto_MediumItalic_webfont_ttf = Url("Roboto-MediumItalic-webfont.ttf");
                public static readonly string Roboto_MediumItalic_webfont_woff = Url("Roboto-MediumItalic-webfont.woff");
                public static readonly string Roboto_Regular_webfont_eot = Url("Roboto-Regular-webfont.eot");
                public static readonly string Roboto_Regular_webfont_svg = Url("Roboto-Regular-webfont.svg");
                public static readonly string Roboto_Regular_webfont_ttf = Url("Roboto-Regular-webfont.ttf");
                public static readonly string Roboto_Regular_webfont_woff = Url("Roboto-Regular-webfont.woff");
                public static readonly string Roboto_Thin_webfont_eot = Url("Roboto-Thin-webfont.eot");
                public static readonly string Roboto_Thin_webfont_svg = Url("Roboto-Thin-webfont.svg");
                public static readonly string Roboto_Thin_webfont_ttf = Url("Roboto-Thin-webfont.ttf");
                public static readonly string Roboto_Thin_webfont_woff = Url("Roboto-Thin-webfont.woff");
                public static readonly string Roboto_ThinItalic_webfont_eot = Url("Roboto-ThinItalic-webfont.eot");
                public static readonly string Roboto_ThinItalic_webfont_svg = Url("Roboto-ThinItalic-webfont.svg");
                public static readonly string Roboto_ThinItalic_webfont_ttf = Url("Roboto-ThinItalic-webfont.ttf");
                public static readonly string Roboto_ThinItalic_webfont_woff = Url("Roboto-ThinItalic-webfont.woff");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class screenfull {
            public const string UrlPath = "~/Vendor/screenfull";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dist {
                public const string UrlPath = "~/Vendor/screenfull/dist";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string screenfull_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/screenfull.min.js") ? Url("screenfull.min.js") : Url("screenfull.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class select2_bootstrap_theme {
            public const string UrlPath = "~/Vendor/select2-bootstrap-theme";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dist {
                public const string UrlPath = "~/Vendor/select2-bootstrap-theme/dist";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string select2_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2-bootstrap.min.css") ? Url("select2-bootstrap.min.css") : Url("select2-bootstrap.css");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class simple_line_icons {
            public const string UrlPath = "~/Vendor/simple-line-icons";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                public const string UrlPath = "~/Vendor/simple-line-icons/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string simple_line_icons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/simple-line-icons.min.css") ? Url("simple-line-icons.min.css") : Url("simple-line-icons.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                public const string UrlPath = "~/Vendor/simple-line-icons/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string Simple_Line_Icons_eot = Url("Simple-Line-Icons.eot");
                public static readonly string Simple_Line_Icons_svg = Url("Simple-Line-Icons.svg");
                public static readonly string Simple_Line_Icons_ttf = Url("Simple-Line-Icons.ttf");
                public static readonly string Simple_Line_Icons_woff = Url("Simple-Line-Icons.woff");
                public static readonly string Simple_Line_Icons_woff2 = Url("Simple-Line-Icons.woff2");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class slimScroll {
            public const string UrlPath = "~/Vendor/slimScroll";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_slimscroll_min_js = Url("jquery.slimscroll.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class sweetalert {
            public const string UrlPath = "~/Vendor/sweetalert";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dist {
                public const string UrlPath = "~/Vendor/sweetalert/dist";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string sweetalert_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sweetalert-bootstrap.min.css") ? Url("sweetalert-bootstrap.min.css") : Url("sweetalert-bootstrap.css");
                public static readonly string sweetalert_Overlay_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sweetalert-Overlay.min.css") ? Url("sweetalert-Overlay.min.css") : Url("sweetalert-Overlay.css");
                public static readonly string sweetalert_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sweetalert.min.css") ? Url("sweetalert.min.css") : Url("sweetalert.css");
                public static readonly string sweetalert_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sweetalert.min.js") ? Url("sweetalert.min.js") : Url("sweetalert.js");
                public static readonly string sweetalert_min_js = Url("sweetalert.min.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class whirl {
            public const string UrlPath = "~/Vendor/whirl";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dist {
                public const string UrlPath = "~/Vendor/whirl/dist";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string whirl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/whirl.min.css") ? Url("whirl.min.css") : Url("whirl.css");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class app {
            public const string UrlPath = "~/Content/app";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                public const string UrlPath = "~/Content/app/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string app_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/app-rtl.min.css") ? Url("app-rtl.min.css") : Url("app-rtl.css");
                public static readonly string app_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/app.min.css") ? Url("app.min.css") : Url("app.css");
                public static readonly string bootstrap_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-rtl.min.css") ? Url("bootstrap-rtl.min.css") : Url("bootstrap-rtl.css");
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Typography {
                public const string UrlPath = "~/Content/app/Typography";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string app_overlay_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/app-overlay.min.css") ? Url("app-overlay.min.css") : Url("app-overlay.css");
                public static readonly string bootstrap_overlay_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-overlay.min.css") ? Url("bootstrap-overlay.min.css") : Url("bootstrap-overlay.css");
            }
        
        }
    
        public static readonly string bootstrap_datetimepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datetimepicker.min.css") ? Url("bootstrap-datetimepicker.min.css") : Url("bootstrap-datetimepicker.css");
        public static readonly string bootstrap_datetimepicker_min_css = Url("bootstrap-datetimepicker.min.css");
        public static readonly string bootstrap_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-rtl.min.css") ? Url("bootstrap-rtl.min.css") : Url("bootstrap-rtl.css");
        public static readonly string bootstrap_rtl_min_css = Url("bootstrap-rtl.min.css");
        public static readonly string bootstrap_tagsinput_typeahead_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-tagsinput-typeahead.min.css") ? Url("bootstrap-tagsinput-typeahead.min.css") : Url("bootstrap-tagsinput-typeahead.css");
        public static readonly string bootstrap_tagsinput_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-tagsinput.min.css") ? Url("bootstrap-tagsinput.min.css") : Url("bootstrap-tagsinput.css");
        public static readonly string bootstrap_tagsinput_less = Url("bootstrap-tagsinput.less");
        public static readonly string bootstrap_theme_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme-rtl.min.css") ? Url("bootstrap-theme-rtl.min.css") : Url("bootstrap-theme-rtl.css");
        public static readonly string bootstrap_theme_rtl_min_css = Url("bootstrap-theme-rtl.min.css");
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            public const string UrlPath = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string select2_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2-bootstrap.min.css") ? Url("select2-bootstrap.min.css") : Url("select2-bootstrap.css");
            public static readonly string select2_overlay_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2-overlay.min.css") ? Url("select2-overlay.min.css") : Url("select2-overlay.css");
            public static readonly string select2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2.min.css") ? Url("select2.min.css") : Url("select2.css");
            public static readonly string select2_min_css = Url("select2.min.css");
        }
    
        public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
        public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            public const string UrlPath = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string logo_single_png = Url("logo-single.png");
            public static readonly string logo_png = Url("logo.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class user {
                public const string UrlPath = "~/Content/Images/user";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _02_jpg = Url("02.jpg");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class IranSans {
            public const string UrlPath = "~/Content/IranSans";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string IRANSans_Bold_web_eot = Url("IRANSans-Bold-web.eot");
            public static readonly string IRANSans_Bold_web_ttf = Url("IRANSans-Bold-web.ttf");
            public static readonly string IRANSans_Bold_web_woff = Url("IRANSans-Bold-web.woff");
            public static readonly string IRANSans_Bold_web_woff2 = Url("IRANSans-Bold-web.woff2");
            public static readonly string IRANSans_Medium_web_eot = Url("IRANSans-Medium-web.eot");
            public static readonly string IRANSans_Medium_web_ttf = Url("IRANSans-Medium-web.ttf");
            public static readonly string IRANSans_Medium_web_woff = Url("IRANSans-Medium-web.woff");
            public static readonly string IRANSans_Medium_web_woff2 = Url("IRANSans-Medium-web.woff2");
            public static readonly string IRANSans_web_eot = Url("IRANSans-web.eot");
            public static readonly string IRANSans_web_ttf = Url("IRANSans-web.ttf");
            public static readonly string IRANSans_web_woff = Url("IRANSans-web.woff");
            public static readonly string IRANSans_web_woff2 = Url("IRANSans-web.woff2");
            public static readonly string IranSans_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/IranSans.min.css") ? Url("IranSans.min.css") : Url("IranSans.css");
            public static readonly string IRANSansWeb_eot = Url("IRANSansWeb.eot");
            public static readonly string IRANSansWeb_woff = Url("IRANSansWeb.woff");
            public static readonly string IRANSansWeb_woff2 = Url("IRANSansWeb.woff2");
            public static readonly string IRANSansWeb_Bold_woff = Url("IRANSansWeb_Bold.woff");
            public static readonly string IRANSansWeb_Bold_woff2 = Url("IRANSansWeb_Bold.woff2");
            public static readonly string IRANSansWeb_Light_woff = Url("IRANSansWeb_Light.woff");
            public static readonly string IRANSansWeb_Light_woff2 = Url("IRANSansWeb_Light.woff2");
            public static readonly string IRANSansWeb_Medium_eot = Url("IRANSansWeb_Medium.eot");
            public static readonly string IRANSansWeb_Medium_woff = Url("IRANSansWeb_Medium.woff");
            public static readonly string IRANSansWeb_Medium_woff2 = Url("IRANSansWeb_Medium.woff2");
            public static readonly string IRANSansWeb_UltraLight_woff = Url("IRANSansWeb_UltraLight.woff");
            public static readonly string IRANSansWeb_UltraLight_woff2 = Url("IRANSansWeb_UltraLight.woff2");
        }
    
        public static readonly string jquery_contextMenu_overlay_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.contextMenu-overlay.min.css") ? Url("jquery.contextMenu-overlay.min.css") : Url("jquery.contextMenu-overlay.css");
        public static readonly string jquery_contextMenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.contextMenu.min.css") ? Url("jquery.contextMenu.min.css") : Url("jquery.contextMenu.css");
        public static readonly string jquery_contextMenu_min_css = Url("jquery.contextMenu.min.css");
        public static readonly string jquery_contextMenu_min_css_map = Url("jquery.contextMenu.min.css.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class MdBootstrapPersianDateTimePicker {
            public const string UrlPath = "~/Content/MdBootstrapPersianDateTimePicker";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_Bootstrap_PersianDateTimePicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.Bootstrap-PersianDateTimePicker.min.css") ? Url("jquery.Bootstrap-PersianDateTimePicker.min.css") : Url("jquery.Bootstrap-PersianDateTimePicker.css");
        }
    
        public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class app 
            {
                public static partial class modules 
                {
                    public static class Assets
                    {
                        public const string bootstrap_start_js = "~/Scripts/app/modules/bootstrap-start.js"; 
                        public const string constants_js = "~/Scripts/app/modules/constants.js"; 
                        public const string fullscreen_js = "~/Scripts/app/modules/fullscreen.js"; 
                        public const string localize_js = "~/Scripts/app/modules/localize.js"; 
                        public const string navbar_search_js = "~/Scripts/app/modules/navbar-search.js"; 
                        public const string notify_js = "~/Scripts/app/modules/notify.js"; 
                        public const string panel_tools_js = "~/Scripts/app/modules/panel-tools.js"; 
                        public const string play_animation_js = "~/Scripts/app/modules/play-animation.js"; 
                        public const string select2_js = "~/Scripts/app/modules/select2.js"; 
                        public const string sidebar_js = "~/Scripts/app/modules/sidebar.js"; 
                        public const string slimscroll_js = "~/Scripts/app/modules/slimscroll.js"; 
                        public const string toggle_state_js = "~/Scripts/app/modules/toggle-state.js"; 
                        public const string utils_js = "~/Scripts/app/modules/utils.js"; 
                    }
                }
                public static class Assets
                {
                    public const string app_init_js = "~/Scripts/app/app.init.js"; 
                }
            }
            public static partial class i18n 
            {
                public static class Assets
                {
                    public const string ar_js = "~/Scripts/i18n/ar.js"; 
                    public const string az_js = "~/Scripts/i18n/az.js"; 
                    public const string bg_js = "~/Scripts/i18n/bg.js"; 
                    public const string ca_js = "~/Scripts/i18n/ca.js"; 
                    public const string cs_js = "~/Scripts/i18n/cs.js"; 
                    public const string da_js = "~/Scripts/i18n/da.js"; 
                    public const string de_js = "~/Scripts/i18n/de.js"; 
                    public const string el_js = "~/Scripts/i18n/el.js"; 
                    public const string en_js = "~/Scripts/i18n/en.js"; 
                    public const string es_js = "~/Scripts/i18n/es.js"; 
                    public const string et_js = "~/Scripts/i18n/et.js"; 
                    public const string eu_js = "~/Scripts/i18n/eu.js"; 
                    public const string fa_js = "~/Scripts/i18n/fa.js"; 
                    public const string fi_js = "~/Scripts/i18n/fi.js"; 
                    public const string fr_js = "~/Scripts/i18n/fr.js"; 
                    public const string gl_js = "~/Scripts/i18n/gl.js"; 
                    public const string he_js = "~/Scripts/i18n/he.js"; 
                    public const string hi_js = "~/Scripts/i18n/hi.js"; 
                    public const string hr_js = "~/Scripts/i18n/hr.js"; 
                    public const string hu_js = "~/Scripts/i18n/hu.js"; 
                    public const string id_js = "~/Scripts/i18n/id.js"; 
                    public const string is_js = "~/Scripts/i18n/is.js"; 
                    public const string it_js = "~/Scripts/i18n/it.js"; 
                    public const string ja_js = "~/Scripts/i18n/ja.js"; 
                    public const string km_js = "~/Scripts/i18n/km.js"; 
                    public const string ko_js = "~/Scripts/i18n/ko.js"; 
                    public const string lt_js = "~/Scripts/i18n/lt.js"; 
                    public const string lv_js = "~/Scripts/i18n/lv.js"; 
                    public const string mk_js = "~/Scripts/i18n/mk.js"; 
                    public const string ms_js = "~/Scripts/i18n/ms.js"; 
                    public const string nb_js = "~/Scripts/i18n/nb.js"; 
                    public const string nl_js = "~/Scripts/i18n/nl.js"; 
                    public const string pl_js = "~/Scripts/i18n/pl.js"; 
                    public const string pt_BR_js = "~/Scripts/i18n/pt-BR.js"; 
                    public const string pt_js = "~/Scripts/i18n/pt.js"; 
                    public const string ro_js = "~/Scripts/i18n/ro.js"; 
                    public const string ru_js = "~/Scripts/i18n/ru.js"; 
                    public const string sk_js = "~/Scripts/i18n/sk.js"; 
                    public const string sr_Cyrl_js = "~/Scripts/i18n/sr-Cyrl.js"; 
                    public const string sr_js = "~/Scripts/i18n/sr.js"; 
                    public const string sv_js = "~/Scripts/i18n/sv.js"; 
                    public const string th_js = "~/Scripts/i18n/th.js"; 
                    public const string tr_js = "~/Scripts/i18n/tr.js"; 
                    public const string uk_js = "~/Scripts/i18n/uk.js"; 
                    public const string vi_js = "~/Scripts/i18n/vi.js"; 
                    public const string zh_CN_js = "~/Scripts/i18n/zh-CN.js"; 
                    public const string zh_TW_js = "~/Scripts/i18n/zh-TW.js"; 
                }
            }
            public static partial class MdBootstrapPersianDateTimePicker 
            {
                public static class Assets
                {
                    public const string jalaali_js = "~/Scripts/MdBootstrapPersianDateTimePicker/jalaali.js"; 
                    public const string jquery_Bootstrap_PersianDateTimePicker_js = "~/Scripts/MdBootstrapPersianDateTimePicker/jquery.Bootstrap-PersianDateTimePicker.js"; 
                }
            }
            public static class Assets
            {
                public const string bootstrap_datetimepicker_js = "~/Scripts/bootstrap-datetimepicker.js"; 
                public const string bootstrap_datetimepicker_min_js = "~/Scripts/bootstrap-datetimepicker.min.js"; 
                public const string bootstrap_rtl_js = "~/Scripts/bootstrap-rtl.js"; 
                public const string bootstrap_rtl_min_js = "~/Scripts/bootstrap-rtl.min.js"; 
                public const string bootstrap_tagsinput_angular_js = "~/Scripts/bootstrap-tagsinput-angular.js"; 
                public const string bootstrap_tagsinput_angular_min_js = "~/Scripts/bootstrap-tagsinput-angular.min.js"; 
                public const string bootstrap_tagsinput_js = "~/Scripts/bootstrap-tagsinput.js"; 
                public const string bootstrap_tagsinput_min_js = "~/Scripts/bootstrap-tagsinput.min.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string jquery_2_2_4_intellisense_js = "~/Scripts/jquery-2.2.4.intellisense.js"; 
                public const string jquery_2_2_4_js = "~/Scripts/jquery-2.2.4.js"; 
                public const string jquery_2_2_4_min_js = "~/Scripts/jquery-2.2.4.min.js"; 
                public const string jquery_contextMenu_js = "~/Scripts/jquery.contextMenu.js"; 
                public const string jquery_contextMenu_min_js = "~/Scripts/jquery.contextMenu.min.js"; 
                public const string jquery_ui_position_js = "~/Scripts/jquery.ui.position.js"; 
                public const string jquery_ui_position_min_js = "~/Scripts/jquery.ui.position.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string moment_with_locales_js = "~/Scripts/moment-with-locales.js"; 
                public const string moment_with_locales_min_js = "~/Scripts/moment-with-locales.min.js"; 
                public const string moment_js = "~/Scripts/moment.js"; 
                public const string moment_min_js = "~/Scripts/moment.min.js"; 
                public const string select2_full_js = "~/Scripts/select2.full.js"; 
                public const string select2_full_min_js = "~/Scripts/select2.full.min.js"; 
                public const string select2_js = "~/Scripts/select2.js"; 
                public const string select2_min_js = "~/Scripts/select2.min.js"; 
            }
        }
        public static partial class Vendor 
        {
            public static partial class animate_css 
            {
                public static class Assets
                {
                    public const string animate_min_css = "~/Vendor/animate.css/animate.min.css";
                }
            }
            public static partial class animo_js 
            {
                public static class Assets
                {
                    public const string animo_js_ = "~/Vendor/animo.js/animo.js"; 
                }
            }
            public static partial class Anka 
            {
                public static class Assets
                {
                    public const string anka_tools_js = "~/Vendor/Anka/anka.tools.js"; 
                    public const string ankasoft_datatable_js = "~/Vendor/Anka/ankasoft.datatable.js"; 
                }
            }
            public static partial class bbcnassim 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string font_BBCNassim_min_css = "~/Vendor/bbcnassim/css/font-BBCNassim.min.css";
                    }
                }
                public static partial class fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class contextMenu 
            {
                public static class Assets
                {
                    public const string jquery_contextmenu_overlay_css = "~/Vendor/contextMenu/jquery.contextmenu-overlay.css";
                    public const string jquery_contextmenu_css = "~/Vendor/contextMenu/jquery.contextmenu.css";
                    public const string jquery_contextmenu_js = "~/Vendor/contextMenu/jquery.contextmenu.js"; 
                    public const string jquery_contextmenu_min_js = "~/Vendor/contextMenu/jquery.contextmenu.min.js"; 
                }
            }
            public static partial class fontawesome 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string font_awesome_min_css = "~/Vendor/fontawesome/css/font-awesome.min.css";
                    }
                }
                public static partial class fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class jquery_localize_i18n 
            {
                public static partial class dist 
                {
                    public static class Assets
                    {
                        public const string jquery_localize_js = "~/Vendor/jquery-localize-i18n/dist/jquery.localize.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class jQuery_Storage_API 
            {
                public static class Assets
                {
                    public const string jquery_storageapi_js = "~/Vendor/jQuery-Storage-API/jquery.storageapi.js"; 
                }
            }
            public static partial class jquery_easing 
            {
                public static partial class js 
                {
                    public static class Assets
                    {
                        public const string jquery_easing_js = "~/Vendor/jquery.easing/js/jquery.easing.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class matchMedia 
            {
                public static class Assets
                {
                    public const string matchMedia_js = "~/Vendor/matchMedia/matchMedia.js"; 
                }
            }
            public static partial class roboto 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string font_Roboto_css = "~/Vendor/roboto/css/font-Roboto.css";
                        public const string font_Roboto_min_css = "~/Vendor/roboto/css/font-Roboto.min.css";
                    }
                }
                public static partial class fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class screenfull 
            {
                public static partial class dist 
                {
                    public static class Assets
                    {
                        public const string screenfull_js = "~/Vendor/screenfull/dist/screenfull.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class select2_bootstrap_theme 
            {
                public static partial class dist 
                {
                    public static class Assets
                    {
                        public const string select2_bootstrap_css = "~/Vendor/select2-bootstrap-theme/dist/select2-bootstrap.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class simple_line_icons 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string simple_line_icons_css = "~/Vendor/simple-line-icons/css/simple-line-icons.css";
                    }
                }
                public static partial class fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class slimScroll 
            {
                public static class Assets
                {
                    public const string jquery_slimscroll_min_js = "~/Vendor/slimScroll/jquery.slimscroll.min.js"; 
                }
            }
            public static partial class sweetalert 
            {
                public static partial class dist 
                {
                    public static class Assets
                    {
                        public const string sweetalert_bootstrap_css = "~/Vendor/sweetalert/dist/sweetalert-bootstrap.css";
                        public const string sweetalert_Overlay_css = "~/Vendor/sweetalert/dist/sweetalert-Overlay.css";
                        public const string sweetalert_css = "~/Vendor/sweetalert/dist/sweetalert.css";
                        public const string sweetalert_js = "~/Vendor/sweetalert/dist/sweetalert.js"; 
                        public const string sweetalert_min_js = "~/Vendor/sweetalert/dist/sweetalert.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class whirl 
            {
                public static partial class dist 
                {
                    public static class Assets
                    {
                        public const string whirl_css = "~/Vendor/whirl/dist/whirl.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
        public static partial class Content 
        {
            public static partial class app 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string app_rtl_css = "~/Content/app/css/app-rtl.css";
                        public const string app_css = "~/Content/app/css/app.css";
                        public const string bootstrap_rtl_css = "~/Content/app/css/bootstrap-rtl.css";
                        public const string bootstrap_css = "~/Content/app/css/bootstrap.css";
                    }
                }
                public static partial class Typography 
                {
                    public static class Assets
                    {
                        public const string app_overlay_css = "~/Content/app/Typography/app-overlay.css";
                        public const string bootstrap_overlay_css = "~/Content/app/Typography/bootstrap-overlay.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class css 
            {
                public static class Assets
                {
                    public const string select2_bootstrap_css = "~/Content/css/select2-bootstrap.css";
                    public const string select2_overlay_css = "~/Content/css/select2-overlay.css";
                    public const string select2_css = "~/Content/css/select2.css";
                    public const string select2_min_css = "~/Content/css/select2.min.css";
                }
            }
            public static partial class Images 
            {
                public static partial class user 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class IranSans 
            {
                public static class Assets
                {
                    public const string IranSans_css = "~/Content/IranSans/IranSans.css";
                }
            }
            public static partial class MdBootstrapPersianDateTimePicker 
            {
                public static class Assets
                {
                    public const string jquery_Bootstrap_PersianDateTimePicker_css = "~/Content/MdBootstrapPersianDateTimePicker/jquery.Bootstrap-PersianDateTimePicker.css";
                }
            }
            public static class Assets
            {
                public const string bootstrap_datetimepicker_css = "~/Content/bootstrap-datetimepicker.css";
                public const string bootstrap_datetimepicker_min_css = "~/Content/bootstrap-datetimepicker.min.css";
                public const string bootstrap_rtl_css = "~/Content/bootstrap-rtl.css";
                public const string bootstrap_rtl_min_css = "~/Content/bootstrap-rtl.min.css";
                public const string bootstrap_tagsinput_typeahead_css = "~/Content/bootstrap-tagsinput-typeahead.css";
                public const string bootstrap_tagsinput_css = "~/Content/bootstrap-tagsinput.css";
                public const string bootstrap_theme_rtl_css = "~/Content/bootstrap-theme-rtl.css";
                public const string bootstrap_theme_rtl_min_css = "~/Content/bootstrap-theme-rtl.min.css";
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string font_awesome_css = "~/Content/font-awesome.css";
                public const string font_awesome_min_css = "~/Content/font-awesome.min.css";
                public const string jquery_contextMenu_overlay_css = "~/Content/jquery.contextMenu-overlay.css";
                public const string jquery_contextMenu_css = "~/Content/jquery.contextMenu.css";
                public const string jquery_contextMenu_min_css = "~/Content/jquery.contextMenu.min.css";
                public const string PagedList_css = "~/Content/PagedList.css";
                public const string Site_css = "~/Content/Site.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


